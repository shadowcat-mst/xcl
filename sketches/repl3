use strictures 2;
BEGIN {
  require './sketches/vmsketch';
  require './sketches/parser4';
}
use XCL::Values qw(Native Environment Dict);
my $p = XCL::Parser->new;

my $env = Environment([ $XCL::Values::Builtins ]);

#($p->parse_statement('set [intro +] add'))[1]->eval($env);

my (undef, $ret) = $p->parse_statement('+ 1 3 [ + 7 13 ]');

use Devel::DDCWarn;

::Dwarn($ret);

::Dwarn my $r = $ret->eval($env);

if (my $v = $r->val) {
  warn $v->string->val->data;
}

exit 0;

(undef, $ret) = $p->parse_statement('(1, + 2 3, 4)');

::Dwarn($ret);

(undef, $ret) = $p->parse_statement('foreach x list { spoon x; frob; }');

::Dwarn($ret);
