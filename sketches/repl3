use Caroline;
use Devel::DDCWarn;
use strictures 2;
STDOUT->autoflush(1);
BEGIN {
  require './sketches/vmsketch';
  require './sketches/parser4';
}
use XCL::Values qw(Native Environment Dict);

my $p = XCL::Parser->new;

my $env = $XCL::Values::Builtins->snapshot;

my $l = Caroline->new;

while (my $line = $l->readline('> ')) {
  if (my $res = eval { $p->parse_statement($line) }) {
    unless (eval { print $res->eval($env)->display(3)."\n"; 1 }) {
      warn "Error executing ${line}: $@\n";
    }
  } else {
    warn "Error parsing ${line}: $@\n";
  }
}


__END__
#($p->parse_statement('set [intro +] add'))[1]->eval($env);

#my (undef, $ret) = $p->parse_statement('+ 1 3 [ + 7 13 ]');
my (undef, $ret) = $p->parse_statement('if 1 { $ 4 } { $ 6 }');

use Devel::DDCWarn;

::Dwarn($ret);

::Dwarn my $r = $ret->eval($env);

if (my $v = $r->val) {
  warn $v->string->val->data;
}

exit 0;

(undef, $ret) = $p->parse_statement('(1, + 2 3, 4)');

::Dwarn($ret);

(undef, $ret) = $p->parse_statement('foreach x list { spoon x; frob; }');

::Dwarn($ret);
