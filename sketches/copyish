# assumption: copy_dbh is pre-primed thing with connection and columns

var copy_data = fs.file('copyfile').lines().all();

###################
#
# while [!fail_i and let (i, l) = iter.next()] {
#   let res = result_of copy_dbh.send l;
#   unless res.is_ok() {
#     fail_i = i;
#   }
# }
# if fail_i {
#   copy_dbh.rollback();
# } else {
#   copy_dbh.commit();
# }
# $fail_i;
#
#
###################

let copy_try lst {
  let iter = lst.pairs().iter();
  copy_dbh.begin();
  var fail_i = 0;
  while [!fail_i and let (i, l) = iter.next()] {
    fail_i = i unless .is_ok() result_of(copy_dbh.send l);
  }
  copy_dbh.[?: fail_i \rollback \commit]();
  $fail_i
}

let skipped_rows = ();

while copy_data {
  if [let first_fail_i = copy_try copy_data] {
    copy_try copy_data(0..[first_fail_i - 1]);
    log 'Skipped row ' ++ first_fail_i;
    skipped_rows.push first_fail_i;
    copy_data = copy_data([first_fail_i+1]..copy_data.lastidx());
  } else {
    copy_data = ();
  }
}
