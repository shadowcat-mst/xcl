set = set;
set . dot;
# <<<magic ensues to make them *now* binops>>>
Scope.val_in_current let = Scope.val_in_current;
let var = Scope.var_in_current;
let fexpr = Fexpr.make;
let => = let lambda = Lambda.make;
let % = let dict = Dict.make;
let current_scope = Scope.current;
let string = String.make;
let == = .eq;
let != = .ne;
let < = .lt;
let > = .gt;
let <= = .le;
let >= = .ge;
let + = .plus;
let - = .minus;
let * = .multiply;
let / = .divide;
let ++ = .concat;
let \ = escape;
let $ = id;
let ? = result_of;
let ! = let not = Bool.not;
